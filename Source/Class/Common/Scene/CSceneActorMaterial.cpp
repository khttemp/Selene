

//-----------------------------------------------------------------------------------
// INCLUDE
//-----------------------------------------------------------------------------------
#include "Class/Common/Scene/CSceneActorMaterial.h"


//-----------------------------------------------------------------------------------
// NAMESPACE
//-----------------------------------------------------------------------------------
using namespace Selene;
using namespace Scene;


//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
CSceneActorMaterial::CSceneActorMaterial()
	: m_pShader			( NULL )
	, m_IndexStart		( 0 )
	, m_IndexCount		( 0 )
	, m_VertexStart		( 0 )
	, m_VertexCount		( 0 )
	, m_vDiffuseColor	( 1.0f, 1.0f, 1.0f, 1.0f )
	, m_vEmissiveColor	( 0.0f, 0.0f, 0.0f, 0.0f )
	, m_vSpecularColor	( 0.0f, 0.0f, 0.0f, 0.0f )
	, m_vTextureOffset	( 0.0f, 0.0f )
	, m_fRefractive		( 0.0f )
	, m_fRoughly		( 0.0f )
	, m_fParallaxDepth	( 0.0f )
	, m_SpecularType	( SPECULAR_TYPE_NONE )
	, m_BumpType		( BUMP_TYPE_NONE )
	, m_DrawType		( DRAW_TYPE_NORMAL )
	, m_CullType		( CULL_FRONT )
	, m_AlphaBoundary	( 0 )
	, m_IsAlphaTest		( true )
	, m_IsZTest			( true )
	, m_IsZWrite		( true )
	, m_IsLight			( true )
{
	for ( Sint32 i = 0; i < MATERIAL_TEXTURE_MAX; i++ )
	{ 
		m_pTextureTbl[i] = NULL;
	}
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
CSceneActorMaterial::~CSceneActorMaterial()
{
	SAFE_RELEASE( m_pShader );

	for ( Sint32 i = 0; i < MATERIAL_TEXTURE_MAX; i++ )
	{ 
		SAFE_RELEASE( m_pTextureTbl[i] );
	}
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetShader( Renderer::Shader::IShader *pShader )
{
	SAFE_RELEASE( m_pShader );
	m_pShader = pShader;
	SAFE_ADDREF( m_pShader );

	if ( (m_pShader != NULL) && m_pShader->IsInvalid() )
	{
		m_pShader = NULL;
	}
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetIndexStart( Sint32 Cnt )
{
	m_IndexStart = Cnt;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetIndexCount( Sint32 Cnt )
{
	m_IndexCount = Cnt;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetVertexStart( Sint32 Cnt )
{
	m_VertexStart = Cnt;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetVertexCount( Sint32 Cnt )
{
	m_VertexCount = Cnt;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetTexture( eTextureStage Stage, Renderer::ITexture *pTex )
{
	SAFE_RELEASE( m_pTextureTbl[Stage] );
	m_pTextureTbl[Stage] = pTex;
	SAFE_ADDREF( m_pTextureTbl[Stage] );
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetDiffuseColor( const Math::Vector4D &Color )
{
	m_vDiffuseColor = Color;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetEmissiveColor( const Math::Vector4D &Color )
{
	m_vEmissiveColor = Color;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetSpecularColor( const Math::Vector4D &Color )
{
	m_vSpecularColor = Color;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetTextureOffset( const Math::Vector2D &Offset )
{
	m_vTextureOffset = Offset;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetSpecularRefractive( Float fRefractive )
{
	m_fRefractive = fRefractive;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetSpecularRoughly( Float fRoughly )
{
	m_fRoughly = fRoughly;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetParallaxDepth( Float fDepth )
{
	m_fParallaxDepth = fDepth;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetSpecularType( eSpecularType Mode )
{
	m_SpecularType = Mode;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetBumpType( eBumpType Mode )
{
	m_BumpType = Mode;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetDrawType( eDrawType Type )
{
	m_DrawType = Type;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetCullType( eCullType Type )
{
	m_CullType = Type;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetAlphaBoundary( Sint32 Bound )
{
	m_AlphaBoundary = Bound;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetAlphaTestEnable( Bool IsEnable )
{
	m_IsAlphaTest = IsEnable;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetZTestEnable( Bool IsEnable )
{
	m_IsZTest = IsEnable;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetZWriteEnable( Bool IsEnable )
{
	m_IsZWrite = IsEnable;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CSceneActorMaterial::SetLightEnable( Bool IsEnable )
{
	m_IsLight = IsEnable;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Renderer::Shader::IShader *CSceneActorMaterial::GetShader( void )
{
	return m_pShader;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Sint32 CSceneActorMaterial::GetIndexStart( void )
{
	return m_IndexStart;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Sint32 CSceneActorMaterial::GetIndexCount( void )
{
	return m_IndexCount;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Sint32 CSceneActorMaterial::GetVertexStart( void )
{
	return m_VertexStart;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Sint32 CSceneActorMaterial::GetVertexCount( void )
{
	return m_VertexCount;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Renderer::ITexture *CSceneActorMaterial::GetTexture( Sint32 Stage )
{
	return m_pTextureTbl[Stage];
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Math::Vector4D &CSceneActorMaterial::GetDiffuseColor( void )
{
	return m_vDiffuseColor;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Math::Vector4D &CSceneActorMaterial::GetEmissiveColor( void )
{
	return m_vEmissiveColor;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Math::Vector4D &CSceneActorMaterial::GetSpecularColor( void )
{
	return m_vSpecularColor;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Math::Vector2D &CSceneActorMaterial::GetTextureOffset( void )
{
	return m_vTextureOffset;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Float CSceneActorMaterial::GetSpecularRefractive( void )
{
	return m_fRefractive;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Float CSceneActorMaterial::GetSpecularRoughly( void )
{
	return m_fRoughly;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Float CSceneActorMaterial::GetParallaxDepth( void )
{
	return m_fParallaxDepth;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
eSpecularType CSceneActorMaterial::GetSpecularType( void )
{
	return m_SpecularType;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
eBumpType CSceneActorMaterial::GetBumpType( void )
{
	return m_BumpType;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
eDrawType CSceneActorMaterial::GetDrawType( void )
{
	return m_DrawType;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
eCullType CSceneActorMaterial::GetCullType( void )
{
	return m_CullType;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Sint32 CSceneActorMaterial::GetAlphaBoundary( void )
{
	return m_AlphaBoundary;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Bool CSceneActorMaterial::GetAlphaTestEnable( void )
{
	return m_IsAlphaTest;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Bool CSceneActorMaterial::GetZTestEnable( void )
{
	return m_IsZTest;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Bool CSceneActorMaterial::GetZWriteEnable( void )
{
	return m_IsZWrite;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
Bool CSceneActorMaterial::GetLightEnable( void )
{
	return m_IsLight;
}

